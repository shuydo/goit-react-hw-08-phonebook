{"version":3,"sources":["redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","redux/slices/contacts.js","redux/store.js","Comps/Navigation.js","Comps/UserMenu/default-avatar.png","Comps/UserMenu/UserMenu.js","Comps/AuthNav.js","Comps/AppBar.js","Comps/PublicRoute.js","App.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","logIn","operations","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","console","log","rejectWithValue","get","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","name","getIsFetchingCurrent","isFetchingCurrentUser","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","action","payload","pending","rejected","items","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","newContact","body","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","rootReducer","authReducer","reducer","store","configureStore","middleware","getDefaultMiddleware","devTools","process","setupListeners","dispatch","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","UserMenu","useDispatch","useSelector","defaultAvatar","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","PublicRoute","children","restricted","redirectTo","routeProps","shouldRedirect","HomeView","lazy","RegisterView","LoginView","App","fallback","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45125d1f.chunk.js","sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\n// axios.defaults.baseURL = 'https://lpj-tasker.herokuapp.com';\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\n// qweqwe qwerty@gmai.com 1234qaz\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body: { name, email, password }\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nconst register = createAsyncThunk('auth/register', async credentials => {\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\n/*\n * POST @ /users/login\n * body: { email, password }\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = createAsyncThunk('auth/login', async credentials => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\n/*\n * POST @ /users/logout\n * headers: Authorization: Bearer token\n * После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      console.log('Токена нет, уходим из fetchCurrentUser');\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      // TODO: Добавить обработку ошибки error.message\n    }\n  },\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n  getIsFetchingCurrent,\n};\nexport default authSelectors;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.pending](state) {\n      state.isFetchingCurrentUser = true;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const items = createApi({\r\n  reducerPath: \"items\",  // reducerPath: \"contactsApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://60ad63bf80a61f0017330e5e.mockapi.io/api/v1/\",\r\n  }),\r\n  tagTypes: [\"Contact\"],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => \"/contacts\",\r\n      providesTags: [\"Contact\"],\r\n    }),\r\n\r\n    deleteContact: builder.mutation({\r\n      query: contactId => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"Contact\"],\r\n    }),\r\n\r\n    createContact: builder.mutation({\r\n      query: newContact => ({\r\n        url: \"/contacts\",\r\n        method: \"POST\",\r\n        body: newContact,\r\n      }),\r\n      invalidatesTags: [\"Contact\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} = items;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\r\n\r\nimport { items } from \"../redux/slices/contacts\";\r\nimport { authReducer } from \"./auth\";\r\n\r\n// console.log(authReducer);\r\n\r\n// import filter from \"./slices/filter\";\r\n\r\nconst rootReducer = {\r\n  auth: authReducer,\r\n  [items.reducerPath]: items.reducer,\r\n  // filter,\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n\r\n  middleware: getDefaultMiddleware => [\r\n    ...getDefaultMiddleware(),\r\n    items.middleware,\r\n  ],\r\n\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\nexport default store;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst Navigation = () => {\r\n  // const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n        Главная\r\n      </NavLink>\r\n\r\n      {/* {isLoggedIn && (\r\n        <>\r\n          <NavLink\r\n            to=\"/todos\"\r\n            exact\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}\r\n          >\r\n            Заметки\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/upload\"\r\n            exact\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}\r\n          >\r\n            Загрузить\r\n          </NavLink>\r\n        </>\r\n      )} */}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './default-avatar.png';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  const avatar = defaultAvatar;\n\n  return (\n    <div style={styles.container}>\n      <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n      <span style={styles.name}>Добро пожаловать, {name}</span>\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n        Выйти\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Регистрация\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Логин\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport Navigation from \"./Navigation\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport AuthNav from \"./AuthNav\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\nconst styles = {\r\n  header: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    borderBottom: \"1px solid #2A363B\",\r\n  },\r\n};\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <header style={styles.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\n * - В противном случае рендерит компонент\n *\n */ \n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import { /* useEffect, */Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport AppBar from './Comps/AppBar';\nimport PrivateRoute from './Comps/PrivateRoute';\nimport PublicRoute from './Comps/PublicRoute';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\n// import ContactForm from \"./Comps/ContactForm/ContactForm\";\n// import ContactList from \"./Comps/ContactList/ContactList\";\n// import Filter from \"./Comps/Filter/Filter\";\n\n// import { Toaster } from \"react-hot-toaster\";\n\nexport default function App() {\n\n  return (\n    <>\n    <AppBar />\n          <Switch>\n            <Suspense fallback={<p>Загружаем...</p>}>\n              <PublicRoute exact path=\"/\">\n                <HomeView />\n              </PublicRoute>\n\n              <PublicRoute exact path=\"/register\" restricted>\n                <RegisterView />\n              </PublicRoute>\n\n              <PublicRoute exact path=\"/login\" redirectTo=\"/todos\" restricted>\n                <LoginView />\n              </PublicRoute>\n\n              {/* <PrivateRoute path=\"/todos\" redirectTo=\"/login\"> */}\n                {/* <ContactsView /> */}\n              {/* </PrivateRoute> */}\n              \n              {/* <PrivateRoute path=\"/upload\" redirectTo=\"/login\">\n                <UploadView />\n              </PrivateRoute> */}\n            </Suspense>\n          </Switch>\n      {/* <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList /> */}\n\n      {/* <Toaster position=\"top-right\" /> */}\n    </>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}