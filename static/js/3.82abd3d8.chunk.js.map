{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Comps/ContactList/ContactList.js","views/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ContactList","useFetchContactsQuery","contacts","data","isFetching","useDeleteContactMutation","deleteContact","isDeleting","isLoading","useSelector","state","filter","map","contact","name","number","onClick","id","TodosView","params","useDispatch"],"mappings":"6LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,sHIMvF,SAASC,IACtB,MAAuCC,cAAzBC,EAAd,EAAQC,KAAgBC,EAAxB,EAAwBA,WACxB,EAAmDC,cAAnD,mBAAOC,EAAP,KAAmCC,EAAnC,KAAwBC,UACTC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAS1C,OACE,qCACGP,GAAc,2CACdF,GACC,gCACE,6CAEA,6BACGA,EAASU,KAAI,SAAAC,GAAO,OACnB,6BACE,8BACE,iCACGA,EAAQC,KADX,KACmBD,EAAQE,OAAS,cAEpC,wBAAQC,QAAS,kBAAMV,EAAcO,EAAQI,KAA7C,SACGV,EAAa,cAAgB,eAN3BM,EAAQI,eCdhB,SAASC,EAAUC,GACfC,cAQjB,OAEE,aADA,CACA,qBAWE,cAACpB,EAAD","file":"static/js/3.82abd3d8.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n} from \"../../redux/slices/contacts\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst getFilterContacts = (contacts, filterQ) =>\r\n  contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(filterQ.toLowerCase())\r\n  );\r\n\r\nexport default function ContactList() {\r\n  const { data: contacts, isFetching } = useFetchContactsQuery();\r\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation(); // console.log(data);\r\n  const filter = useSelector(state => state.filter);\r\n\r\n  // console.log(\"state.filter: \", filter);\r\n  // let dBase = [];\r\n  // if (!isFetching) {\r\n  //   console.log(\"contacts: \"), contacts;\r\n  //   dBase = getFilterContacts(contacts, filter);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      {isFetching && <p>Loading...</p>}\r\n      {contacts && (\r\n        <div>\r\n          <h3>ContactList</h3>\r\n\r\n          <ol>\r\n            {contacts.map(contact => (\r\n              <li key={contact.id}>\r\n                <p>\r\n                  <span>\r\n                    {contact.name}: {contact.number + \"  \"}\r\n                  </span>\r\n                  <button onClick={() => deleteContact(contact.id)}>\r\n                    {isDeleting ? \"Deleting...\" : \"Delete\"}\r\n                  </button>\r\n                </p>\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import Container from '../components/Container';\nimport ContactList from '../Comps/ContactList';\n// import TodoEditor from '../components/TodoEditor';\n// import Filter from '../components/TodoFilter';\n// import Stats from '../components/Stats';\n// import Modal from '../components/Modal';\n// import IconButton from '../components/IconButton';\n// import { ReactComponent as AddIcon } from '../icons/add.svg';\n// import { todosOperations, todosSelectors } from '../redux/todos';\n\nconst barStyles = {\n  display: 'flex',\n  alignItems: 'flex-end',\n  marginBottom: 20,\n};\n\nexport default function TodosView(params) {\n  const dispatch = useDispatch();\n  // const isLoadingTodos = useSelector(todosSelectors.getLoading);\n\n  // const [isModalOpen, setIsModalOpen] = useState(false);\n  // const toggleModal = () => setIsModalOpen(state => !state);\n\n  // useEffect(() => dispatch(todosOperations.fetchTodos()), [dispatch]);\n\n  return (\n    // <Container>\n    <>\n      {/* <div style={barStyles}>\n        <Filter />\n        <Stats />\n        <IconButton onClick={toggleModal} aria-label=\"Добавить todo\">\n          <AddIcon width=\"40\" height=\"40\" fill=\"#fff\" />\n        </IconButton>\n\n        {isLoadingTodos && <h1>Загружаем...</h1>}\n      </div> */}\n\n      <ContactList />\n\n      {/* {isModalOpen && (\n        <Modal onClose={toggleModal}>\n          <TodoEditor onSave={toggleModal} />\n        </Modal>\n      )} */}\n      </>\n    // </Container>\n  );\n}\n"],"sourceRoot":""}