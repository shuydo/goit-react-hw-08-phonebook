{"version":3,"sources":["redux/slices/contacts.js","redux/slices/filter.js","redux/store.js","Comps/ContactForm/ContactForm.js","Comps/ContactList/ContactList.js","Comps/Filter/Filter.js","App.js","index.js"],"names":["items","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","newContact","body","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","filterSlice","createSlice","name","initialState","reducers","filterChange","_","action","payload","actions","rootReducer","reducer","filter","store","configureStore","middleware","getDefaultMiddleware","setupListeners","dispatch","initState","number","ContactForm","useState","form","setForm","inputHandler","e","target","value","onSubmit","preventDefault","type","pattern","title","required","onChange","ContactList","contacts","data","isFetching","isDeleting","isLoading","useSelector","state","map","contact","onClick","id","Filter","useDispatch","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAEaA,EAAQC,YAAU,CAE7BC,YAAa,QACbC,UAAWC,YAAe,CACxBC,QAAS,wDAEXC,SAAU,CAAC,WACXC,UAAW,SAAAC,GAAO,MAAK,CACrBC,cAAeD,EAAQE,MAAM,CAC3BA,MAAO,iBAAM,aACbC,aAAc,CAAC,aAGjBC,cAAeJ,EAAQK,SAAS,CAC9BH,MAAO,SAAAI,GAAS,MAAK,CACnBC,IAAI,aAAD,OAAeD,GAClBE,OAAQ,WAEVC,gBAAiB,CAAC,aAGpBC,cAAeV,EAAQK,SAAS,CAC9BH,MAAO,SAAAS,GAAU,MAAK,CACpBJ,IAAK,YACLC,OAAQ,OACRI,KAAMD,IAERF,gBAAiB,CAAC,iBAMtBI,EAGErB,EAHFqB,sBACAC,EAEEtB,EAFFsB,yBACAC,EACEvB,EADFuB,yBCnCIC,EAAcC,YAAY,CAC9BC,KAAM,SACNC,aAAc,GACdC,SAAU,CAAEC,aAAc,SAACC,EAAGC,GAAJ,OAAeA,EAAOC,YAGnCH,EAAiBL,EAAYS,QAA7BJ,aACAL,IAAf,QCFMU,GAAW,mBACdlC,EAAME,YAAcF,EAAMmC,SADZ,uBAEfC,GAFe,GAKXC,EAAQC,YAAe,CAC3BH,QAASD,EACTK,WAAY,SAAAC,GAAoB,4BAC3BA,KAD2B,CAE9BxC,EAAMuC,gBAIVE,YAAeJ,EAAMK,UACNL,Q,8BClBTM,EAAY,CAAEjB,KAAM,GAAIkB,OAAQ,IAEvB,SAASC,IACtB,MAAwBC,mBAASH,GAAjC,mBAAOI,EAAP,KAAaC,EAAb,KACA,EAAwBzB,IAAjBL,EAAP,oBACM+B,EAAe,SAAAC,GAAC,OACpBF,EAAQ,2BAAKD,GAAN,kBAAaG,EAAEC,OAAOzB,KAAOwB,EAAEC,OAAOC,UAQ/C,OACE,uBAAMC,SAPa,SAAAH,GACnBA,EAAEI,iBACFpC,EAAc6B,GACdC,EAAQL,IAIR,UACE,sCACA,uBACEY,KAAK,OACL7B,KAAK,OACL8B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRN,MAAOL,EAAKrB,KACZiC,SAAUV,IAGZ,wCACA,uBACEM,KAAK,MACL7B,KAAK,SACL8B,QAAQ,yFACRC,MAAM,6iBACNC,UAAQ,EACRN,MAAOL,EAAKH,OACZe,SAAUV,IAEZ,uBACA,wBAAQM,KAAK,SAAb,4BC9BS,SAASK,IACtB,MAAuCvC,IAAzBwC,EAAd,EAAQC,KAAgBC,EAAxB,EAAwBA,WACxB,EAAmDzC,IAAnD,mBAAOV,EAAP,KAAmCoD,EAAnC,KAAwBC,UACTC,aAAY,SAAAC,GAAK,OAAIA,EAAM/B,UAS1C,OACE,qCACG2B,GAAc,2CACdF,GACC,gCACE,6CAEA,6BACGA,EAASO,KAAI,SAAAC,GAAO,OACnB,6BACE,8BACE,iCACGA,EAAQ3C,KADX,KACmB2C,EAAQzB,OAAS,cAEpC,wBAAQ0B,QAAS,kBAAM1D,EAAcyD,EAAQE,KAA7C,SACGP,EAAa,cAAgB,eAN3BK,EAAQE,eC7BhB,SAASC,IACtB,IAAM9B,EAAW+B,cAEjB,OACE,qCACE,uDACA,uBACElB,KAAK,OACLI,SAAU,SAAAT,GAAC,OAAIR,EAASb,EAAaqB,EAAEC,OAAOC,cCLvC,SAASsB,IACtB,OACE,qCACE,2CACA,cAAC7B,EAAD,IAEA,0CACA,cAAC2B,EAAD,IACA,cAACZ,EAAD,OCPNe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUxC,MAAOA,EAAjB,SACE,cAACqC,EAAD,QAGJI,SAASC,eAAe,W","file":"static/js/main.b4a488ac.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const items = createApi({\r\n  // reducerPath: \"contactsApi\",\r\n  reducerPath: \"items\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://60ad63bf80a61f0017330e5e.mockapi.io/api/v1/\",\r\n  }),\r\n  tagTypes: [\"Contact\"],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => \"/contacts\",\r\n      providesTags: [\"Contact\"],\r\n    }),\r\n\r\n    deleteContact: builder.mutation({\r\n      query: contactId => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"Contact\"],\r\n    }),\r\n\r\n    createContact: builder.mutation({\r\n      query: newContact => ({\r\n        url: \"/contacts\",\r\n        method: \"POST\",\r\n        body: newContact,\r\n      }),\r\n      invalidatesTags: [\"Contact\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} = items;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst filterSlice = createSlice({\r\n  name: \"filter\",\r\n  initialState: \"\",\r\n  reducers: { filterChange: (_, action) => action.payload },\r\n});\r\n\r\nexport const { filterChange } = filterSlice.actions;\r\nexport default filterSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\r\n\r\nimport { items } from \"../redux/slices/contacts\";\r\n\r\nimport filter from \"./slices/filter\";\r\n\r\nconst rootReducer = {\r\n  [items.reducerPath]: items.reducer,\r\n  filter,\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: getDefaultMiddleware => [\r\n    ...getDefaultMiddleware(),\r\n    items.middleware,\r\n  ],\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\nexport default store;\r\n","import { useState } from \"react\";\nimport { useCreateContactMutation } from \"../../redux/slices/contacts\";\n\nconst initState = { name: \"\", number: \"\" };\n\nexport default function ContactForm() {\n  const [form, setForm] = useState(initState);\n  const [createContact] = useCreateContactMutation();\n  const inputHandler = e =>\n    setForm({ ...form, [e.target.name]: e.target.value });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createContact(form);\n    setForm(initState);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>Name</h3>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={form.name}\n        onChange={inputHandler}\n      />\n\n      <h3>Number</h3>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={form.number}\n        onChange={inputHandler}\n      />\n      <br></br>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n","import {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n} from \"../../redux/slices/contacts\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst getFilterContacts = (contacts, filterQ) =>\r\n  contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(filterQ.toLowerCase())\r\n  );\r\n\r\nexport default function ContactList() {\r\n  const { data: contacts, isFetching } = useFetchContactsQuery();\r\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation(); // console.log(data);\r\n  const filter = useSelector(state => state.filter);\r\n\r\n  // console.log(\"state.filter: \", filter);\r\n  // let dBase = [];\r\n  // if (!isFetching) {\r\n  //   console.log(\"contacts: \"), contacts;\r\n  //   dBase = getFilterContacts(contacts, filter);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      {isFetching && <p>Loading...</p>}\r\n      {contacts && (\r\n        <div>\r\n          <h3>ContactList</h3>\r\n\r\n          <ol>\r\n            {contacts.map(contact => (\r\n              <li key={contact.id}>\r\n                <p>\r\n                  <span>\r\n                    {contact.name}: {contact.number + \"  \"}\r\n                  </span>\r\n                  <button onClick={() => deleteContact(contact.id)}>\r\n                    {isDeleting ? \"Deleting...\" : \"Delete\"}\r\n                  </button>\r\n                </p>\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useDispatch } from \"react-redux\";\nimport { filterChange } from \"../../redux/slices/filter\";\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <h3>Find contacts by name</h3>\n      <input\n        type=\"text\"\n        onChange={e => dispatch(filterChange(e.target.value))}\n        // onChange={e => console.log(e.target.value)}\n      ></input>\n    </>\n  );\n}\n","import ContactForm from \"./Comps/ContactForm/ContactForm\";\nimport ContactList from \"./Comps/ContactList/ContactList\";\nimport Filter from \"./Comps/Filter/Filter\";\n\n// import { Toaster } from \"react-hot-toaster\";\n\nexport default function App() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n\n      {/* <Toaster position=\"top-right\" /> */}\n    </>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}