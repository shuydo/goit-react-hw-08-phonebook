{"version":3,"sources":["redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-actions.js","redux/store.js","Comps/Navigation.js","Comps/UserMenu/default-avatar.png","Comps/UserMenu/UserMenu.js","Comps/AuthNav.js","Comps/AppBar.js","Comps/PrivateRoute.js","Comps/PublicRoute.js","App.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","logIn","operations","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","console","log","rejectWithValue","get","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","name","getIsFetchingCurrent","isFetchingCurrentUser","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","action","payload","pending","rejected","contactsOperations","fetchContacts","dispatch","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","message","addContact","newContact","addContactRequest","then","addContactSuccess","catch","error","addContactError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getFilter","contacts","filter","getAllContacts","items","getCompletedContactCount","createSelector","reduce","total","contact","completed","contactsSelectors","getLoading","loading","getVisibleContacts","normalizeFilter","toLowerCase","number","includes","sort","b","localeCompare","getTotalContactCount","length","createReducer","id","changeFilter","combineReducers","createAction","rootReducer","authReducer","contactsReducer","store","configureStore","reducer","devTools","process","setupListeners","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","useSelector","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","UserMenu","useDispatch","defaultAvatar","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","PrivateRoute","children","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomeView","lazy","RegisterView","LoginView","ContactsView","App","fallback","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fb93694.chunk.js","sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\n// axios.defaults.baseURL = 'https://lpj-tasker.herokuapp.com';\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\n// console.log(axios.defaults.baseURL)\n// qweqwe qwerty@gmai.com 1234qaz \n// user456 user456@gmail.com user456\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body: { name, email, password }\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nconst register = createAsyncThunk('auth/register', async credentials => {\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\n/*\n * POST @ /users/login\n * body: { email, password }\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = createAsyncThunk('auth/login', async credentials => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\n/*\n * POST @ /users/logout\n * headers: Authorization: Bearer token\n * После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      console.log('Токена нет, уходим из fetchCurrentUser');\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      // TODO: Добавить обработку ошибки error.message\n    }\n  },\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n  getIsFetchingCurrent,\n};\nexport default authSelectors;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.pending](state) {\n      state.isFetchingCurrentUser = true;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  // toggleCompletedRequest,\r\n  // toggleCompletedSuccess,\r\n  // toggleCompletedError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from \"./contacts-actions\";\r\n\r\n// GET @ /contacts\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\n// POST @ /contacts\r\nconst addContact = newContact => async dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  await axios\r\n    .post(\"/contacts\", newContact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n\r\n  console.log(\"after add axios\");\r\n};\r\n\r\n// DELETE @ /contacts/:id\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\n// PATCH @ /contacts/:id\r\n// const toggleCompleted =\r\n//   ({ id, completed }) =>\r\n//   dispatch => {\r\n//     const update = { completed };\r\n\r\n//     dispatch(toggleCompletedRequest());\r\n\r\n//     axios\r\n//       .patch(`/contacts/${id}`, update)\r\n//       .then(({ data }) => dispatch(toggleCompletedSuccess(data)))\r\n//       .catch(error => dispatch(toggleCompletedError(error.message)));\r\n//   };\r\n\r\nconst contactsOperations = {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n  // toggleCompleted,\r\n};\r\nexport default contactsOperations;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getFilter = state => state.contacts.filter;// alert(\"what\");\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getTotalContactCount = state => {\r\n  const contacts = getAllContacts(state);\r\n  return contacts.length;\r\n};\r\n\r\nconst getCompletedContactCount = createSelector([getAllContacts], contacts => {\r\n  return contacts.reduce(\r\n    (total, contact) => (contact.completed ? total + 1 : total),\r\n    0\r\n  );\r\n});\r\n\r\n// const getVisibleContacts = createSelector(\r\n//   [getAllContacts, getFilter],\r\n//   (contacts, filter) => {\r\n//     const normalizedFilter = filter.toLowerCase();\r\n//     return contacts.filter(({ description }) =>\r\n//       description.toLowerCase().includes(normalizedFilter)\r\n//     );\r\n//   }\r\n// );\r\n\r\n// M!\r\nexport const getVisibleContacts = createSelector(\r\n  [getFilter, getAllContacts],\r\n  (filter, contacts) => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return contacts\r\n      .filter(\r\n        ({ name, number }) =>\r\n          name.toLowerCase().includes(normalizeFilter) ||\r\n          number.includes(normalizeFilter),\r\n      )\r\n      .sort((a, b) => a.name.localeCompare(b.name));\r\n  },\r\n);\r\n\r\n\r\nconst contactsSelectors = {\r\n  getLoading,\r\n  getFilter,\r\n  getVisibleContacts,\r\n  getTotalContactCount,\r\n  getCompletedContactCount,\r\n};\r\n\r\nexport default contactsSelectors;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n  // toggleCompletedRequest,\r\n  // toggleCompletedSuccess,\r\n  // toggleCompletedError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n  // [toggleCompletedSuccess]: (state, { payload }) =>\r\n  //   state.map(contact => (contact.id === payload.id ? payload : contact)),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  // [toggleCompletedRequest]: () => true,\r\n  // [toggleCompletedSuccess]: () => false,\r\n  // [toggleCompletedError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\n// export const toggleCompletedRequest = createAction(\r\n//   'contacts/toggleCompletedRequest',\r\n// );\r\n// export const toggleCompletedSuccess = createAction(\r\n//   'contacts/toggleCompletedSuccess',\r\n// );\r\n// export const toggleCompletedError = createAction('contacts/toggleCompletedError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\r\n\r\n// import { items } from \"../redux/slices/contacts\";\r\nimport { authReducer } from \"./auth\";\r\nimport { contactsReducer } from \"./contacts\";\r\n\r\n// console.log(authReducer);\r\n\r\n// import filter from \"./slices/filter\";\r\n\r\nconst rootReducer = {\r\n  auth: authReducer,\r\n  contacts: contactsReducer,\r\n  // item: contactsReducer,\r\n  // [items.reducerPath]: items.reducer,\r\n  // filter,\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n\r\n  // middleware: getDefaultMiddleware => [\r\n  //   ...getDefaultMiddleware(),\r\n  //   items.middleware,\r\n  // ],\r\n\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\nexport default store;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n        Главная\r\n      </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <>\r\n          <NavLink\r\n            to=\"/contacts\"\r\n            exact\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}\r\n          >\r\n            Контакты\r\n          </NavLink>\r\n          {/* <NavLink\r\n            to=\"/upload\"\r\n            exact\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}\r\n          >\r\n            Загрузить\r\n          </NavLink> */}\r\n        </>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './default-avatar.png';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  const avatar = defaultAvatar;\n\n  return (\n    <div style={styles.container}>\n      <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n      <span style={styles.name}>Добро пожаловать, {name}</span>\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n        Выйти\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Регистрация\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Логин\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport Navigation from \"./Navigation\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport AuthNav from \"./AuthNav\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\nconst styles = {\r\n  header: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    borderBottom: \"1px solid #2A363B\",\r\n  },\r\n};\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <header style={styles.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * 1. Он должен повторять API Route\n *  2. Он должен рендерить Route\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на redirectTo\n */\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\n * - В противном случае рендерит компонент\n *\n */ \n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import { /* useEffect, */Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport AppBar from './Comps/AppBar';\nimport PrivateRoute from './Comps/PrivateRoute';\nimport PublicRoute from './Comps/PublicRoute';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\n// import ContactForm from \"./Comps/ContactForm/ContactForm\";\n// import ContactList from \"./Comps/ContactList/ContactList\";\n// import Filter from \"./Comps/Filter/Filter\";\n\n// import { Toaster } from \"react-hot-toaster\";\n\nexport default function App() {\n\n  return (\n    <>\n    <AppBar />\n          <Switch>\n            <Suspense fallback={<p>Загружаем...</p>}>\n              <PublicRoute exact path=\"/\">\n                <HomeView />\n              </PublicRoute>\n\n              <PublicRoute exact path=\"/register\" restricted>\n                <RegisterView />\n              </PublicRoute>\n\n              <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n                <LoginView />\n              </PublicRoute>\n\n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n                <ContactsView />\n              </PrivateRoute>\n              \n              {/* <PrivateRoute path=\"/upload\" redirectTo=\"/login\">\n                <UploadView />\n              </PrivateRoute> */}\n            </Suspense>\n          </Switch>\n      {/* <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList /> */}\n\n      {/* <Toaster position=\"top-right\" /> */}\n    </>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}